prototype(Community.News:Author) < prototype(Neos.Neos:Document) {
  # set the template section to use
  templatePath = 'resource://Community.News/Private/Templates/NodeTypes/Author.html'

  sectionName = 'authorDetail'

  name = ${q(node).property('name')}

  content{
    main = Neos.Neos:ContentCollection{
        nodePath = 'main'
    }
  }

  # Fetch and render all news articles that belong to the current author
  newsByAuthor = Community.News:AbstractList {
      @context.listTitle = 'News by this author'
        prototype(Flowpack.Listable:Listable) {
          @context.paginationEnabled = false
          collection = ${q(site).find('[instanceof Community.News:AbstractNews]').filterByReference('author', node).get()}
      }
  }
}

# Attach to `PrimaryContent` to render nodes of this type automatically
prototype(Neos.Neos:PrimaryContent) {
  author{
      @position = 'before default'
      condition = ${q(node).is('[instanceof Community.News:Author]')}
      type = 'Community.News:Author'
  }
}
